server.port=9000
 
dubbo.application.name=dubbo-provider

demo.service.version = 1.0.0
dubbo.protocol.name = dubbo
dubbo.protocol.port = 20880
#指定注册中心的位置
dubbo.registry.address = zookeeper://localhost:2181
#统一设置服务提供方的规则
dubbo.provider.timeout = 1000


#Master库


#mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
#开启驼峰设置
#mybatis.configuration.mapUnderscoreToCamelCase=true

#mybatis日志
mybatis.configuration.log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#logging.level:com.carlton.demo.mapper: debug

#druid 监控SQL
#druid.init.prefix:/druid/*
#druid.init.deny:127.0.0.1
#druid.init.loginUsername:root
#druid.init.loginPassword:123456
#druid.init.resetEnable:false
#druid.init.allow:




#主数据源
sharding.jdbc.data-sources.ds_master.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.data-sources.ds_master.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.data-sources.ds_master.jdbc-url=jdbc:mysql://localhost:3306/testmaster?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT 
sharding.jdbc.data-sources.ds_master.username=root
sharding.jdbc.data-sources.ds_master.password=123456
sharding.jdbc.data-sources.ds_master.maximum-pool-size=30
sharding.jdbc.data-sources.ds_master.minimum-idle=15
#从数据源
sharding.jdbc.data-sources.ds_slave_0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.data-sources.ds_slave_0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.data-sources.ds_slave_0.jdbc-url=jdbc:mysql://localhost:3306/testsalve?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT 
sharding.jdbc.data-sources.ds_slave_0.username=root
sharding.jdbc.data-sources.ds_slave_0.password=123456
sharding.jdbc.data-sources.ds_slave_0.maximum-pool-size=30
sharding.jdbc.data-sources.ds_slave_0.minimum-idle=15
# 读写分离配置
sharding.jdbc.master-slave-rule.name=ds_ms
sharding.jdbc.master-slave-rule.master-data-source-name=ds_master
sharding.jdbc.master-slave-rule.slave-data-source-names=ds_slave_0
sharding.jdbc.master-slave-rule.load-balance-algorithm-type=round_robin

#数据库连接池
#分配连接池实现
#spring.datasource.type = com.zaxxer.hikari.HikariDataSource
#客户端等待连接池连接的最大毫秒数
#spring.datasource.hikari.connection-timeout=20000 
#HikariCP在连接池中维护的最小空闲连接数
#spring.datasource.hikari.minimum-idle=5
#配置最大池大小
#spring.datasource.hikari.maximum-pool-size=12 
#允许连接在连接池中空闲的最长时间
#spring.datasource.hikari.idle-timeout=300000 
#连接关闭后的最长生命周期
#spring.datasource.hikari.max-lifetime=1200000

 

    